---
import Layout from "../layouts/Layout.astro";
import streams from "../data/streams.json";

import ColumnSetting from "../components/ColumnSetting.astro";
---

<Layout
  title="ZEN MODE, an easy way to layout embedded content and share it with friends"
>
  <main class="content">
    <div class="container">
      <div class="columns">
        <div class="column">
          <ColumnSetting /> 
        </div>
        <div class="column">
          <form>
            <details>
              <summary>Video Links</summary>
              <label for="vid-1">1:</label>
              <input
                class="input is-small"
                type="text"
                id="vid-1"
                name="vid-1"
                placeholder="https://www.youtube.com/watch?v=3szkFHfr6sA"
              /><button class="delete"></button><br /><br />
              <label for="vid-2">2:</label>
              <input
                class="input is-small"
                type="text"
                id="vid-2"
                name="vid-2"
                placeholder="https://www.youtube.com/watch?v=JJqXeRFsLjE"
              /><button class="delete"></button><br /><br />
              <label for="vid-3">3:</label>
              <input
                class="input is-small"
                type="text"
                id="vid-3"
                name="vid-3"
                placeholder="https://www.youtube.com/watch?v=OIqUka8BOS8"
              /><button class="delete"></button><br /><br />
              <label for="vid-4">4:</label>
              <input
                class="input is-small"
                type="text"
                id="vid-4"
                name="vid-4"
                placeholder="https://www.youtube.com/watch?v=ydYDqZQpim8"
              /><button class="delete"></button><br /><br />

              <input type="submit" value="Submit" disabled />
            </details>
          </form>
        </div>
      </div>
    </div>

    <div class="custom-columns">
      {
        streams.map((stream) => {
          return (
            <div class="custom-column">
              <div class="youtube-wrapper">
                <iframe
                  class="youtube"
                  width="375"
                  height="300"
                  style="max-width:100%"
                  src={`https://www.youtube.com/embed/${stream.url}?autoplay=1&mute=1`}
                  title="YouTube video player"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                  allowfullscreen
                />
              </div>
            </div>
          );
        })
      }
    </div>
  </main>
</Layout>

<style>
  body {
    margin: 0;
  }
  .container{
    padding: 12px;
  }
  .custom-columns {
    display: flex;
    flex-wrap: wrap;
  }
  .custom-column {
    --element-width: 25%;
    width: var(--element-width, 100%);
    box-sizing: border-box;
  }
  @media (max-width: 768px) {
    .custom-column {
      width: 100%;
    }
  }
  main {
  }
  h1 {
    font-size: 3rem !important;
    font-weight: 800 !important;
    margin: 0;
  }
  .youtube-wrapper {
    position: relative;
    overflow: hidden;
    width: 100%;
    padding-top: 56.25%;
  }
  .youtube-wrapper iframe {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
  }
</style>

<script>
  //Set width prop as URL param '?cols=2'
  const urlParams = new URLSearchParams(window.location.search);
  const cols = urlParams.get("cols");
  const width = 100 / cols;

  //Set .custom-column width based on the const width property
  const customColumns = document.querySelectorAll(".custom-column");
  customColumns.forEach((column) => {
    column.style.setProperty("--element-width", `${width}%`);
  });

  //Set default columns to 2
  const defaultColumns = 2;

  //if URL param is not set, set it to defaultColumns
  if (!urlParams.has("cols")) {
    window.location.search = `?cols=${defaultColumns}`;
  }

  //Update path and width based on user input
  const input = document.querySelector("columnSizeInput");
  const output = document.querySelector("#columnSizeOutput").value;

  //If value changes for the select box input, update the columns
  const selectBox = document.querySelector("#columnSelectBox");
  selectBox.addEventListener("change", (event) => {
    const value = event.target.value;
    window.location.search = `?cols=${value}`;
  });
  //TODO: Set select box option to the value of the URL param
</script>
